<?php

use Drupal\image\Entity\ImageStyle;

/**
 * @file
 * Provides an Image Zoom field formatter for Image fields.
 *
 * This module provides a field formatter that allows users to specify an image
 * style to display, and another image style to use as the zoomed version of the
 * image. Hovering the mouse over the image will display the zoomed version,
 * which shifts with mouse movement.
 */

/**
 * Implements hook_theme().
 */
function imagezoom_theme($existing, $type, $theme, $path)
{
  return [
    'imagezoom_image' => [
      'variables' => [
        'item' => NULL,
        'display_style' => NULL,
        'zoom_style' => NULL,
        'settings' => NULL,
      ],
      'template' => 'imagezoom-image',
    ],
  ];
}

/**
 * Preprocess function for imagezoom_image.
 */
function template_preprocess_imagezoom_image(&$variables)
{
  $item = $variables['item'];

  if ($variables['display_style']) {
    $variables['image'] = ImageStyle::load($variables['display_style'])->buildUrl($item->entity->getFileUri());
    $image = Drupal::service('image.factory')->get($variables['image']);
    $info['width'] = $image->getWidth();
    $info['height'] = $image->getHeight();
  } else {
    $variables['image'] = file_create_url($item->entity->getFileUri());
    $image = Drupal::service('image.factory')->get($variables['zoom']);
    $info['width'] = $image->getWidth();
    $info['height'] = $image->getHeight();
  }

  $variables['width'] = $info['width'];
  $variables['height'] = $info['height'];
  $variables['alt'] = $item->alt;
  $variables['title'] = $item->title;

  if ($variables['zoom_style']) {
    $variables['zoom'] = ImageStyle::load($variables['zoom_style'])->buildUrl($item->entity->getFileUri());
  } else {
    $variables['zoom'] = file_create_url($item->entity->getFileUri());
  }
}
